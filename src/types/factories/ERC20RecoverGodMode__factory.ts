/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20RecoverGodMode,
  ERC20RecoverGodModeInterface,
} from "../ERC20RecoverGodMode";

const _abi = [
  {
    inputs: [],
    name: "ERC20Recover__Initialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "ERC20Recover__NonRecoverableToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC20Recover__NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC20Recover__RecoverZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__OwnerZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "SafeERC20__CallToNonContract",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeERC20__NoReturnData",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "recoverAmount",
        type: "uint256",
      },
    ],
    name: "Recover",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20[]",
        name: "nonRecoverableTokens",
        type: "address[]",
      },
    ],
    name: "SetNonRecoverableTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "TransferOwnership",
    type: "event",
  },
  {
    inputs: [],
    name: "__godMode_getIsRecoverInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "__godMode_setIsRecoverInitialized",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "recoverAmount",
        type: "uint256",
      },
    ],
    name: "_recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "_setNonRecoverableTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "_transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nonRecoverableTokens",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c908290a350610c6c806100616000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639e6ae5a01161005b5780639e6ae5a0146100fb578063cbacc9611461010e578063d29d44ee14610124578063dde4bec01461013757600080fd5b806308b038a91461008d5780631c2872aa146100b05780634b3f2889146100c35780638da5cb5b146100cb575b600080fd5b6100ae61009b366004610919565b6002805460ff1916911515919091179055565b005b6100ae6100be36600461094b565b61014a565b6100ae6103bb565b6000546100de906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100de610109366004610977565b610452565b60025460ff1660405190151581526020016100f2565b6100ae610132366004610990565b61047c565b6100ae6101453660046109f4565b61054b565b6000546001600160a01b0316331461018f5760005460405163cc6bdb1d60e01b81526001600160a01b0390911660048201523360248201526044015b60405180910390fd5b60025460ff166101b257604051635c4a0b6f60e01b815260040160405180910390fd5b806101d057604051636111b02560e11b815260040160405180910390fd5b6000826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610210573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102389190810190610ad6565b805160209091012060015490915060005b81811015610350576001818154811061026457610264610b6a565b6000918252602090912001546001600160a01b038681169116148061031557506001818154811061029757610297610b6a565b6000918252602082200154604080516395d89b4160e01b815290516001600160a01b03909216926395d89b41926004808401938290030181865afa1580156102e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261030b9190810190610ad6565b8051906020012083145b1561033e57604051630e85748b60e01b81526001600160a01b0386166004820152602401610186565b610349600182610b80565b9050610249565b5060005461036b906001600160a01b03868116911685610705565b600054604080516001600160a01b03878116825260208201879052909216917ff6891c84a6c6af32a6d052172a8acc4c631b1d5057ffa2bc1da268b6938ea2da910160405180910390a250505050565b6000546001600160a01b031633146103fb5760005460405163cc6bdb1d60e01b81526001600160a01b039091166004820152336024820152604401610186565b600080546040516001600160a01b03909116907f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6001818154811061046257600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146104bc5760005460405163cc6bdb1d60e01b81526001600160a01b039091166004820152336024820152604401610186565b6001600160a01b0381166104e357604051634208fc5d60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516939216917f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c91a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461058b5760005460405163cc6bdb1d60e01b81526001600160a01b039091166004820152336024820152604401610186565b60025460ff16156105ae5760405162d8f10360e71b815260040160405180910390fd5b805160005b818110156106ac578281815181106105cd576105cd610b6a565b60200260200101516001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610612573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261063a9190810190610ad6565b50600183828151811061064f5761064f610b6a565b602090810291909101810151825460018082018555600094855292909320909201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909316929092179091556106a59082610b80565b90506105b3565b506002805460ff191660011790556000546040516001600160a01b03909116907fd877543bef27da9036243421e623413c8fdd78d7d183cc93d8f3cddbd657a2ed906106f9908590610ba6565b60405180910390a25050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905261076c908490610771565b505050565b60006107b383836040518060400160405280601581526020017f5361666545524332304c6f774c6576656c43616c6c00000000000000000000008152506107ee565b80519091501561076c57808060200190518101906107d19190610bf3565b61076c57604051638b9c40ed60e01b815260040160405180910390fd5b6060610802846001600160a01b03166108cc565b61082a576040516311b6bba160e31b81526001600160a01b0385166004820152602401610186565b600080856001600160a01b0316856040516108459190610c10565b6000604051808303816000865af19150503d8060008114610882576040519150601f19603f3d011682016040523d82523d6000602084013e610887565b606091505b5091509150811561089b5791506108c59050565b8051156108ab5780518082602001fd5b8360405162461bcd60e51b81526004016101869190610c2c565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061090057508115155b949350505050565b801515811461091657600080fd5b50565b60006020828403121561092b57600080fd5b81356108c581610908565b6001600160a01b038116811461091657600080fd5b6000806040838503121561095e57600080fd5b823561096981610936565b946020939093013593505050565b60006020828403121561098957600080fd5b5035919050565b6000602082840312156109a257600080fd5b81356108c581610936565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156109ec576109ec6109ad565b604052919050565b60006020808385031215610a0757600080fd5b823567ffffffffffffffff80821115610a1f57600080fd5b818501915085601f830112610a3357600080fd5b813581811115610a4557610a456109ad565b8060051b9150610a568483016109c3565b8181529183018401918481019088841115610a7057600080fd5b938501935b83851015610a9a5784359250610a8a83610936565b8282529385019390850190610a75565b98975050505050505050565b60005b83811015610ac1578181015183820152602001610aa9565b83811115610ad0576000848401525b50505050565b600060208284031215610ae857600080fd5b815167ffffffffffffffff80821115610b0057600080fd5b818401915084601f830112610b1457600080fd5b815181811115610b2657610b266109ad565b610b39601f8201601f19166020016109c3565b9150808252856020828501011115610b5057600080fd5b610b61816020840160208601610aa6565b50949350505050565b634e487b7160e01b600052603260045260246000fd5b60008219821115610ba157634e487b7160e01b600052601160045260246000fd5b500190565b6020808252825182820181905260009190848201906040850190845b81811015610be75783516001600160a01b031683529284019291840191600101610bc2565b50909695505050505050565b600060208284031215610c0557600080fd5b81516108c581610908565b60008251610c22818460208701610aa6565b9190910192915050565b6020815260008251806020840152610c4b816040850160208701610aa6565b601f01601f1916919091016040019291505056fea164736f6c634300080c000a";

type ERC20RecoverGodModeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20RecoverGodModeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20RecoverGodMode__factory extends ContractFactory {
  constructor(...args: ERC20RecoverGodModeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20RecoverGodMode";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20RecoverGodMode> {
    return super.deploy(overrides || {}) as Promise<ERC20RecoverGodMode>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20RecoverGodMode {
    return super.attach(address) as ERC20RecoverGodMode;
  }
  connect(signer: Signer): ERC20RecoverGodMode__factory {
    return super.connect(signer) as ERC20RecoverGodMode__factory;
  }
  static readonly contractName: "ERC20RecoverGodMode";
  public readonly contractName: "ERC20RecoverGodMode";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20RecoverGodModeInterface {
    return new utils.Interface(_abi) as ERC20RecoverGodModeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20RecoverGodMode {
    return new Contract(address, _abi, signerOrProvider) as ERC20RecoverGodMode;
  }
}
