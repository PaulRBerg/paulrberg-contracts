/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  ERC20RecoverGodMode,
  ERC20RecoverGodModeInterface,
} from "../../test/ERC20RecoverGodMode";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    name: "ERC20Recover__Initialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "ERC20Recover__NonRecoverableToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC20Recover__NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC20Recover__RecoverZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__OwnerZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "SafeERC20__CallToNonContract",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeERC20__NoReturnData",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "recoverAmount",
        type: "uint256",
      },
    ],
    name: "Recover",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20[]",
        name: "nonRecoverableTokens",
        type: "address[]",
      },
    ],
    name: "SetNonRecoverableTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "TransferOwnership",
    type: "event",
  },
  {
    inputs: [],
    name: "__godMode_getIsRecoverInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "__godMode_setIsRecoverInitialized",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "recoverAmount",
        type: "uint256",
      },
    ],
    name: "_recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "_setNonRecoverableTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "_transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nonRecoverableTokens",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c908290a350610c6f806100616000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639e6ae5a01161005b5780639e6ae5a0146100fb578063cbacc9611461010e578063d29d44ee14610124578063dde4bec01461013757600080fd5b806308b038a91461008d5780631c2872aa146100b05780634b3f2889146100c35780638da5cb5b146100cb575b600080fd5b6100ae61009b36600461091c565b6002805460ff1916911515919091179055565b005b6100ae6100be36600461094e565b61014a565b6100ae6103be565b6000546100de906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100de61010936600461097a565b610455565b60025460ff1660405190151581526020016100f2565b6100ae610132366004610993565b61047f565b6100ae6101453660046109f7565b61054e565b6000546001600160a01b0316331461018f5760005460405163cc6bdb1d60e01b81526001600160a01b0390911660048201523360248201526044015b60405180910390fd5b60025460ff166101b257604051635c4a0b6f60e01b815260040160405180910390fd5b806000036101d357604051636111b02560e11b815260040160405180910390fd5b6000826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610213573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261023b9190810190610ad9565b805160209091012060015490915060005b81811015610353576001818154811061026757610267610b6d565b6000918252602090912001546001600160a01b038681169116148061031857506001818154811061029a5761029a610b6d565b6000918252602082200154604080516395d89b4160e01b815290516001600160a01b03909216926395d89b41926004808401938290030181865afa1580156102e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261030e9190810190610ad9565b8051906020012083145b1561034157604051630e85748b60e01b81526001600160a01b0386166004820152602401610186565b61034c600182610b83565b905061024c565b5060005461036e906001600160a01b03868116911685610708565b600054604080516001600160a01b03878116825260208201879052909216917ff6891c84a6c6af32a6d052172a8acc4c631b1d5057ffa2bc1da268b6938ea2da910160405180910390a250505050565b6000546001600160a01b031633146103fe5760005460405163cc6bdb1d60e01b81526001600160a01b039091166004820152336024820152604401610186565b600080546040516001600160a01b03909116907f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6001818154811061046557600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146104bf5760005460405163cc6bdb1d60e01b81526001600160a01b039091166004820152336024820152604401610186565b6001600160a01b0381166104e657604051634208fc5d60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516939216917f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c91a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461058e5760005460405163cc6bdb1d60e01b81526001600160a01b039091166004820152336024820152604401610186565b60025460ff16156105b15760405162d8f10360e71b815260040160405180910390fd5b805160005b818110156106af578281815181106105d0576105d0610b6d565b60200260200101516001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610615573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261063d9190810190610ad9565b50600183828151811061065257610652610b6d565b602090810291909101810151825460018082018555600094855292909320909201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909316929092179091556106a89082610b83565b90506105b6565b506002805460ff191660011790556000546040516001600160a01b03909116907fd877543bef27da9036243421e623413c8fdd78d7d183cc93d8f3cddbd657a2ed906106fc908590610ba9565b60405180910390a25050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905261076f908490610774565b505050565b60006107b683836040518060400160405280601581526020017f5361666545524332304c6f774c6576656c43616c6c00000000000000000000008152506107f1565b80519091501561076f57808060200190518101906107d49190610bf6565b61076f57604051638b9c40ed60e01b815260040160405180910390fd5b6060610805846001600160a01b03166108cf565b61082d576040516311b6bba160e31b81526001600160a01b0385166004820152602401610186565b600080856001600160a01b0316856040516108489190610c13565b6000604051808303816000865af19150503d8060008114610885576040519150601f19603f3d011682016040523d82523d6000602084013e61088a565b606091505b5091509150811561089e5791506108c89050565b8051156108ae5780518082602001fd5b8360405162461bcd60e51b81526004016101869190610c2f565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061090357508115155b949350505050565b801515811461091957600080fd5b50565b60006020828403121561092e57600080fd5b81356108c88161090b565b6001600160a01b038116811461091957600080fd5b6000806040838503121561096157600080fd5b823561096c81610939565b946020939093013593505050565b60006020828403121561098c57600080fd5b5035919050565b6000602082840312156109a557600080fd5b81356108c881610939565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156109ef576109ef6109b0565b604052919050565b60006020808385031215610a0a57600080fd5b823567ffffffffffffffff80821115610a2257600080fd5b818501915085601f830112610a3657600080fd5b813581811115610a4857610a486109b0565b8060051b9150610a598483016109c6565b8181529183018401918481019088841115610a7357600080fd5b938501935b83851015610a9d5784359250610a8d83610939565b8282529385019390850190610a78565b98975050505050505050565b60005b83811015610ac4578181015183820152602001610aac565b83811115610ad3576000848401525b50505050565b600060208284031215610aeb57600080fd5b815167ffffffffffffffff80821115610b0357600080fd5b818401915084601f830112610b1757600080fd5b815181811115610b2957610b296109b0565b610b3c601f8201601f19166020016109c6565b9150808252856020828501011115610b5357600080fd5b610b64816020840160208601610aa9565b50949350505050565b634e487b7160e01b600052603260045260246000fd5b60008219821115610ba457634e487b7160e01b600052601160045260246000fd5b500190565b6020808252825182820181905260009190848201906040850190845b81811015610bea5783516001600160a01b031683529284019291840191600101610bc5565b50909695505050505050565b600060208284031215610c0857600080fd5b81516108c88161090b565b60008251610c25818460208701610aa9565b9190910192915050565b6020815260008251806020840152610c4e816040850160208701610aa9565b601f01601f1916919091016040019291505056fea164736f6c634300080e000a";

type ERC20RecoverGodModeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20RecoverGodModeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20RecoverGodMode__factory extends ContractFactory {
  constructor(...args: ERC20RecoverGodModeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20RecoverGodMode> {
    return super.deploy(overrides || {}) as Promise<ERC20RecoverGodMode>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20RecoverGodMode {
    return super.attach(address) as ERC20RecoverGodMode;
  }
  override connect(signer: Signer): ERC20RecoverGodMode__factory {
    return super.connect(signer) as ERC20RecoverGodMode__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20RecoverGodModeInterface {
    return new utils.Interface(_abi) as ERC20RecoverGodModeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20RecoverGodMode {
    return new Contract(address, _abi, signerOrProvider) as ERC20RecoverGodMode;
  }
}
