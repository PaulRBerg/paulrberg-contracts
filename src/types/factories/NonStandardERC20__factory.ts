/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NonStandardERC20,
  NonStandardERC20Interface,
} from "../NonStandardERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106db806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806340c10f19116100815780639dc29fac1161005b5780639dc29fac1461019e578063a9059cbb146101b1578063dd62ed3e146101c457600080fd5b806340c10f191461015a57806370a082311461016d57806395d89b411461019657600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610126578063313ce5671461013b57600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101fd565b6040516100e39190610522565b60405180910390f35b6100ff6100fa366004610593565b61028b565b60405190151581526020016100e3565b61011860035481565b6040519081526020016100e3565b6101396101343660046105bd565b6102a1565b005b6000546101489060ff1681565b60405160ff90911681526020016100e3565b610139610168366004610593565b6102ec565b61011861017b3660046105f9565b6001600160a01b031660009081526005602052604090205490565b6100d6610378565b6101396101ac366004610593565b610385565b6101396101bf366004610593565b610409565b6101186101d236600461061b565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6001805461020a9061064e565b80601f01602080910402602001604051908101604052809291908181526020018280546102369061064e565b80156102835780601f1061025857610100808354040283529160200191610283565b820191906000526020600020905b81548152906001019060200180831161026657829003601f168201915b505050505081565b6000610298338484610418565b50600192915050565b6102ac83838361047a565b6001600160a01b0383166000908152600460209081526040808320338085529252909120546102e79185916102e290859061069f565b610418565b505050565b6001600160a01b038216600090815260056020526040812080548392906103149084906106b6565b92505081905550806003600082825461032d91906106b6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b6002805461020a9061064e565b6001600160a01b038216600090815260056020526040812080548392906103ad90849061069f565b9250508190555080600360008282546103c6919061069f565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161036c565b61041433838361047a565b5050565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831660009081526005602052604090205461049e90829061069f565b6001600160a01b0380851660009081526005602052604080822093909355908416815220546104ce9082906106b6565b6001600160a01b0380841660008181526005602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061046d9085815260200190565b600060208083528351808285015260005b8181101561054f57858101830151858201604001528201610533565b81811115610561576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461058e57600080fd5b919050565b600080604083850312156105a657600080fd5b6105af83610577565b946020939093013593505050565b6000806000606084860312156105d257600080fd5b6105db84610577565b92506105e960208501610577565b9150604084013590509250925092565b60006020828403121561060b57600080fd5b61061482610577565b9392505050565b6000806040838503121561062e57600080fd5b61063783610577565b915061064560208401610577565b90509250929050565b600181811c9082168061066257607f821691505b6020821081141561068357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156106b1576106b1610689565b500390565b600082198211156106c9576106c9610689565b50019056fea164736f6c634300080c000a";

type NonStandardERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NonStandardERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NonStandardERC20__factory extends ContractFactory {
  constructor(...args: NonStandardERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NonStandardERC20";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NonStandardERC20> {
    return super.deploy(overrides || {}) as Promise<NonStandardERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NonStandardERC20 {
    return super.attach(address) as NonStandardERC20;
  }
  connect(signer: Signer): NonStandardERC20__factory {
    return super.connect(signer) as NonStandardERC20__factory;
  }
  static readonly contractName: "NonStandardERC20";
  public readonly contractName: "NonStandardERC20";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NonStandardERC20Interface {
    return new utils.Interface(_abi) as NonStandardERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NonStandardERC20 {
    return new Contract(address, _abi, signerOrProvider) as NonStandardERC20;
  }
}
